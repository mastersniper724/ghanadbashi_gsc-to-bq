# ============================================================
# Filename: gsc_searchappearance_fullfetch.yml
# Python :  gsc_to_bq_searchappearance_fullfetch.py
# Revision: Rev.02
# Purpose: As Google's complete and full available data is just for official 4 days before
#          fetch time, so to avoid void data and dates and for Daily Search Appearance real data,
#          better to set 4 days refering to END_DATE and TARGET_DATE="4 days ago" so will will get
#          Daily data for Other Search Appearance data
# ============================================================

name: GSC (searchAppearance) Daily Snapshot to BigQuery

on:
  schedule:
    # GitHub Actions uses UTC ‚Üí 01:00 UTC = 04:30 Tehran time
    - cron: '00 01 * * *'
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
        default: '2024-08-01'
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true
        default: '2025-09-30'
      debug:
        description: 'Enable debug mode'
        required: false
        default: 'false'

jobs:
  sync-enhancements:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ‚úÖ ŸÖÿ±ÿ≠ŸÑŸá‚Äå€å ⁄©ÿ¥ ⁄©ÿ±ÿØŸÜ Ÿæ⁄©€åÿ¨‚ÄåŸáÿß€å pip
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # ‚úÖ ŸÜÿµÿ® ŸÖÿß⁄òŸàŸÑ‚ÄåŸáÿß ÿßÿ≤ ŸÅÿß€åŸÑ requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write GCP credentials file
        run: |
          if [ -n "${{ secrets.GHANADBASHI_GCP_SA_KEY_BASE64 }}" ]; then
            printf "%s" "${{ secrets.GHANADBASHI_GCP_SA_KEY_BASE64 }}" | base64 --decode > gcp-key.json
          elif [ -n "${{ secrets.GHANADBASHI_GCP_SA_KEY }}" ]; then
            printf "%s" "${{ secrets.GHANADBASHI_GCP_SA_KEY }}" > gcp-key.json
          else
            echo "‚ùå ERROR: Missing GCP credentials secret."
            exit 1
          fi

      - name: Validate gcp-key.json
        run: python -c "import json; json.load(open('gcp-key.json'))"
        
      - name: Run Search Appearance FullFetch Python
        env:
          GOOGLE_APPLICATION_CREDENTIALS: gcp-key.json
          PYTHONPATH: src
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            # Scheduled daily snapshot (4 days behind)
            TARGET_DATE=$(date -u -d "4 days ago" +"%Y-%m-%d")
            START_DATE="$TARGET_DATE"
            END_DATE="$TARGET_DATE"
            DEBUG_FLAG=""
          else
            # Manual run (workflow_dispatch)
            if [ "${{ github.event.inputs.debug }}" = "true" ]; then
              DEBUG_FLAG="--debug"
            else
              DEBUG_FLAG=""
            fi
            START_DATE="${{ github.event.inputs.start_date }}"
            END_DATE="${{ github.event.inputs.end_date }}"
          fi

          echo "üìÖ Fetching Search Appearance data from $START_DATE to $END_DATE"

          CSV_TEST_FILE="gsc_fullfetch_test_rev02_${{ github.run_id }}.csv"

          python src/scripts/gsc_to_bq_searchappearance_fullfetch.py \
            $DEBUG_FLAG \
            --start-date "$START_DATE" \
            --end-date "$END_DATE" \
            --csv-test "${CSV_TEST_FILE}"


      - name: Upload CSV test output
        if: ${{ github.event.inputs.debug == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: gsc_searchappearance_fullfetch
          path: gsc_searchappearance_fullfetch_test_rev02_*.csv            
